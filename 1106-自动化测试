1.selenium家族
	selenium 1.0 (rc)(过去式)
	selenium IDE (集成开发环境，firfox和chrome有对应版本)
	selenium webdriver (重点)
	selenium grid(分布式自动化测试工具，可以在多个环境下并发执行，缩短测试脚本运行时间)
2.webdriver驱动原理
	大概过程：执行脚本，webdriver会启动一个新的线程去启动一个浏览器，浏览器可以理解为服务器，客户端为脚本，通过脚本操作浏览器，脚本发送一个请求给浏览器，浏览器处理后返回给脚本
	webdriver的三个角色:1.自动化测试代码  2.浏览器的驱动  3.浏览器
3.css定位
	定位输入框
	a.单一属性定位
		a1.标签选择器
			find_element_by_css_selector("input")
			input就是标签的名字
		a2.id定位
			find_element_by_css_selector("#kw")
			#在css中代表选择id
			kw就是id的值
		a3.class定位
			find_element_by_css_selector(".s_ipt")
			.在css中代表class
		a4.其他属性定位
			find_element_by_css_selector("[name='wd']")
			标签中满足name的值是wd的标签
		补充:F12中元素定位调试--console $()
	b.组合属性定位
		b1.id组合定位
			$("input#kw")
		b2.class组合属性定位
			$("input.s_ipt")
		b3.其他属性组合定位
			$("input[name='wd']")
		b4.只有属性名，没有属性值
			$("input[maxlength]")
		b5.两个其他属性定位
			$("[name='wd'][autocomplete='off']")
		b6.模糊匹配
			匹配属性以XXX开头或者以xxx结尾
			$("input[class^='s']")
			$("input[class$='pt']")
4.xpath定位
	针对于xml的路径语言，通过元素的路径来寻找这个元素
	a.工具
		F12
		火狐:firebug
	b.用法
		/   	绝对路径，从根节点选取元素
		//      相对路径，所有子节点中搜索对应元素
		@       选取属性
		.       当前节点
		..      当前节点的父节点
		通过浏览器的F12的console中也可以进行调试 $x()
		b1.xpath支持id\class\name定位
			$x("//*[@id='kw']")
			$x("//input[@id='kw']")
			$x("//*[@class='s_ipt']")
			$x("//*[@name='wd']")
		b2.如果没有id、class、name属性，xpath支持其他属性定位
			$x("//*[@autocomplete]")
		b3.通过相对路径定位元素
			$x("//a[@class='mnav c-font-normal c-color-t'][2]")
		b4.通过绝对路径定位元素
			$x("/html/body/div[1]/div[1]")
		b5.xpath的运算符
			and   同时满足条件
			or    满足一个条件即可
			$x("//a[@class='mnav c-font-normal c-color-t' and @href='http://news.baidu.com'] ")
5.下拉框的处理
	1.通过send_keys()
	2.通过二次操作
	3.Select类
		通过索引
		通过value
		通过文本
6.框架切换
	框架 frame iframe 
	1.从主文档切换到frame中(switch_to.frame(参数))
		参数可以用来定位frame,传入id，name等等
		br.switch_to.frame("frame1")
	2.从frame中切换到主文档(switch_to.default_content())
		切换到frame中不能继续操作主文档中元素，如果需要操作，需要且回到主文档
		br.switch_to.default_content()
	3.嵌套frame的操作
		开发时候会出现嵌套frame
		1.从主文档切换到frame2，一层一层进入
			br.switch_to.frame("frame1")
			br.switch_to.frame("frame2")
		2.子frame切换父frame
			相当于后退，随意切换
			br.switch_to.parent_frame()
			如果当前文档是主文档，无效

